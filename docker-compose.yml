services:
  db2instance:
    image: ibmcom/db2
    privileged: true
    ports:
      - "${DB2_PORT:-50000}:50000"
    environment:
      AUTOCONFIG: "true"
      DB2INST1_PASSWORD: "${DB2INST1_PASSWORD:-my-db2-password}"
      DB2INSTANCE: "${DB2INSTANCE:-db2inst1}"
      DBNAME: "${DBNAME:-TESTDB}"
      LICENSE: "accept"
      TO_CREATE: "true"
    healthcheck:
      test: [ "CMD-SHELL", "su - db2inst1 -c 'db2 connect to TESTDB user db2inst1 using my-db2-password > /dev/null 2>&1 || exit 1'" ]
      interval: 30s
      timeout: 30s
      retries: 10
    networks:
      internship-network:
    volumes:
      - db2data:/database

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      db2instance:
        condition: service_healthy
    environment:
      SERVER_SSL_ENABLED: "${SERVER_SSL_ENABLED:-false}"
      SERVER_PORT: "${SERVER_PORT:-8443}"
      JWT_SECRET: "${JWT_SECRET:-to-mod}"
      SPRING_DATASOURCE_PASSWORD: "${SPRING_DATASOURCE_PASSWORD:-my-db2-password}"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL:-jdbc:db2://db2instance:50000/TESTDB}"
      SPRING_DATASOURCE_USERNAME: "${SPRING_DATASOURCE_USERNAME:-db2inst1}"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "${SPRING_JPA_HIBERNATE_DDL_AUTO:-update}"
      SPRING_BOOT_API_URL: "${SPRING_BOOT_API_URL:-http://localhost:8444}"
    command: ["./wait-for-it.sh", "db2instance:50000", "--timeout=60", "--strict", "--", "java", "-jar", "app.jar"]
    networks:
      internship-network:
    ports:
      - "${BACKEND_PORT:-8444}:8443"

  frontend:
    # Control Dockerfile depends on which .env
    build:
      context: ./frontend
      dockerfile: "${FRONTEND_DOCKERFILE:-Dockerfile}"
    container_name: "${FRONTEND_CONTAINER_NAME:-frontend-prod}"
    depends_on:
      - backend
    networks:
      internship-network:
    volumes:
      - ./frontend:/app
      - /app/node_modules

    # Development mode → ["npm", "run", "dev"]
    # Production mode → ["nginx", "-g", "daemon off;"]
    command: [
      "/bin/sh", "-c", "${FRONTEND_COMMAND:-nginx -g 'daemon off;'}"
    ]

    ports:
      # dev: "5173:5173", prod: "8080:80"
      - "${FRONTEND_PORT_MAPPING:-8080:80}"

volumes:
  db2data:

networks:
  internship-network:
    driver: bridge
